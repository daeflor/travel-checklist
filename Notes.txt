TO-DOs:

	- index.html          : 1
	- GridManager.js      : 17
    - Grid.js             : 3
    - Header.js           : 4
    - ListToggle.js       : 4
    - ListItem.js         : 11
    - ListItemModifier.js : 12
    - Helpers.js          : 7
	- style_new.css       : 2

Upcoming To-Do List:
- COMMIT these messy changes and then fix the mess. Including the bug that ListItem name color does not get set initially. 
 --  Then could look into IIFEs vs ActivePopover and ActiveSettings, etc.
- To Switch row pos: Model/Storage: for i = 0 ... if (id == id) ... var x = list[i+1], lists[i+1] = lists[i], lists[i] = x ...
    View: param: id, prevId ... GetElement(id).remove() ... insertBefore(GetELement(prevId), GetElement(id));
- Consider having two separate websites for travel and shopping lists, since they aren't directly related. They can still share some common utility files. 
- Need to clearly differentiate between item categories and packed categories (or whatever the term ends up as)

Thoughts:
- There are probably some GetElementByID calls that could be called on other elements instead of the document
- Standardize bracket/spacing/parameter/callback usage
- In the future, calls to the View may need to be a callback passed to the model (e.g. if it interacts with Storage), but for now it isn't necessary
- It might be nice if List Item IDs were prefixed by the List ID, so only one param would need to be passed when editing the model
- It may be possible to avoid the Active List/SettingsView/Popover/etc. by using self-invoking functions
- Is it possible to make the Android Back button work in the app (e.g. to go back to the Home Screen from the List Screen)?
    Might require having the different screens (e.g. Home vs List) actually use different pages hashes (e.g. travel-checklist/#/List)
- When focus is brought to a text area, it would be nice to scroll to it. (i.e. when tapping in a text area in Settings View, it doesn't always scroll into view above the keyboard, currently)
- May want to change back the Add New Item Row to being left-aligned with a light background again
- May want to change back to having the List Toggle open a List, and a settings button to open the Settings View
- Could consider changing UI/DOM structure so that different screens are handled together (e.g. All Home Screen elements in one div, all List screen elements in another, instead of Headers together in their own div. And then, similar elements like headers would still share a class).
- Create a file or section that is simply to abstract away DOM element IDs, names, etc. --- Isn't that what the View is for? Is it necessary to take it a step further? Probably not
- Would it help to remove eventlisteners that aren't being used?
- Could add the Pre-Travel 'To-Do' list to the Travel Checklist
- ! Ability to sort by state (e.g. 'Completed' items at the bottom of the list).
    Should have items/rows have a state, which dictates their color, rather than just keep track of the color. 
- A row could have a notion of 'balance' (instead) of state. Balance is determined by quantity amounts, and dictates the color-coding of the row. 
- Consider using MusicExtension's ExportLocalStorageToFile method, as a backup in case localstorage gets erased. 
    - Would need an import option for this to be useful. Could possibly have an option to load a list from a specific folder which is part of the project, and in which exports have been manually placed. 
    - (Does this even work on phone? Should I pull the code out from either project and create a separate library/utility file?)
    - Could also consider the possibility of uploading the data to Google Drive or something similar (as an extra challenge / learning experience)
- Freeze top/header row of the different lists
- Shopping List: Start with simple checklist (don't need differentiation between 'needed' and 'in cart')
- To be consistent, maybe have a 'go' button (or arrow) in the list of lists which opens the list, since selecting the list to open it isn't consistent with the rest of the app
- Create 'move' buttons to move an item up or down the grid/list
    Grid state would need to be stored when Rows get moved up or down in the grid
- Standardize between " and '
- Should have a good way to test backwards compatibility
- Figure out what's causing poor performance with collapsible settings view
- Is there a type of logging to console that only triggers in a specific mode?
- Add some mechanism to differentiate or toggle between dev mode and publish mode (this could be used to disable logging or dictate storage location, for example)
- Perhaps split up header and/or headermanager into its own thing
- Should long item names be truncated?
- There should be no hardcoded lists in index.html
- Could use objects/properties (e.g. { ... }) for certain function parameters (e.g. NewRow) instead of many different individual parameters
- Should get away from concept of grid, rows, and columns, since they are not being used that way exactly
  //ListManager (All Lists)
        //  Headers
        //  List
        //    -> Header
        //    Items
        //      "Columns"/QuantityTrackers/Checkbox  
        // ?

Future:

- Could group similar item types into categories, which show up in dropdown lists of the category
    Main problem with this is then each dropdown item would also have its own popover, which could get very cluttered
- Could there be icons for item names (or item categories) instead of text?
- Somehow enable offline functionality. (Currently, the page does not work properly if there is no network connection).
    Reminder: There is an uncompressed and compressed version of jquery. Post-development, should use compressed.
    Reminder: Should probably get latest versions of plugins (e.g. Popper.js).
    Reminder: Should figure out which exact subset of files is necessary (specifically for font-awesome)
        - Could also consider using a different font library, if not going to be using CDN anyway.
- Could have a separate/hidden section for feedback after a trip. For example, quantity of an item not actually used, and length of the trip. 
- Replace any jquery with pure javascript where possible (currently there is nothing that can be easily replaced).
- Categories Improvements:
    - Have ability for user to add/edit/remove categories
    - One of the categories could be travel preparation, which would require different columns and interactions
    - The links to different categories could have checkmarks or be color-coded to indicate whether or not that section is 'complete' or not
        May also make sense to have an 'overview' section/page for this, which tallies totals and shows overall state
- Need a manager for the whole page, not just grids. Could split up GridManager or rename it. 
    (Could depend on whether or not Interactions get pulled out into a separate manager/file)
- Color palette of popovers (incl. background) could be better
- Might be useful to have a helper function which turns elements into html tags
- Could alternate row background color for better readability
- Ability to collapse all 'completed' item rows so you can focus just on the incomplete ones?
